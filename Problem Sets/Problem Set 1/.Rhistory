system
system()
system(invisibl=FALSE)
build
current
packages()
library
library()
loaded
x<-rnorm(100)
y<-rnorm(100)
x-y
plot(1:100, x-y)
plot(x,y)
plot(x/y,y/x)
plot(x-y,y-x)
help("par")
qqplot(x,y)
x<-rpois(200, 10)
qqplot(x,y)
qqplot(y,x)
y<-rpois(200,5)
qqplot(x,y)
qqplot(y,x)
rexp(100)
x<-rexp(200)
plot(x,y)
qqplot(x,y)
plot(x,y)
y<-rt(200)
y<-rt(200, df=100)
plot(x,y)
y<-log(y)
plot(x,y)
stackloss
pairs
help("pairs")
pairs(stackloss)
plot(stackloss)
x<-1:1000
y<- x^2 - x
plot(x,y)
y<- x^2 - log(x)
plot(x,y)
y<- x^2 - x*log(x)
plot(x,y)
plot(2x,y)
plot(2*x,y)
x <- x/2
plot(x,y)
plot(-y,x)
y<-x*log(x)
plot(-y,x)
Orange
plot(circumference ~ age, data=Orange, pch=as.numeric(as.character(Tree)))
abline(lm(circumference  ̃ age, data = Orange, subset = Tree == "1"), lty = 1)
abline(lm(circumference  ̃ age, data = Orange, subset = Tree == "2"), lty = 2)
abline(lm(circumference  ̃ age, data = Orange, subset = Tree == "3"), lty = 3, lwd = 2)
abline(lm(circumference  ̃ age, data = Orange, subset = Tree == "4"), lty = 4)
abline(lm(circumference  ̃ age, data = Orange, subset = Tree == "5"), lty = 5)
legend("topleft", legend = paste("Tree", 1:5), lty = 1:5, pch = 1:5, lwd = c(1, 1, 2, 1, 1))
abline(lm(circumference~ age, data = Orange, subset = Tree == "1"), lty = 1)
abline(lm(circumference ~ age, data = Orange, subset = Tree == "2"), lty = 2)
abline(lm(circumference ~ age, data = Orange, subset = Tree == "3"), lty = 3, lwd = 2)
abline(lm(circumference ~ age, data = Orange, subset = Tree == "4"), lty = 4)
abline(lm(circumference ~ age, data = Orange, subset = Tree == "5"), lty = 5)
legend("topleft", legend = paste("Tree", 1:5), lty = 1:5, pch = 1:5, lwd = c(1, 1, 2, 1, 1))
par(mar = c(5, 5, 5, 5) + 0.1)
plot(c(1, 9), c(0, 50), type = ’n’, xlab = "", ylab = "")
par(mar = c(5, 5, 5, 5) + 0.1)
plot(c(1, 9), c(0, 50), type = 'n', xlab = "", ylab = "")
motor
motor
dataframes
data()
volcano
plot(volcano)
summary(volcano)
plot(volcano[1], volcano[2])
rivers
precipo
precip
pie(precip)
pie(precip, cex=.2)
pie(precip, cex=.2, legend=TRUE)
pie(precip, cex=.2, legend=TRUE)
faithful
plot(faithful)
plot(faithful, axes=FALSE) box()
plot(faithful, axes=FALSE)
box()
plot(faithful, axes=FALSE, xlab"", ylab"")
plot(faithful, axes=FALSE, xlab" ", ylab" ")
plot(faithful, axes=FALSE, xlab=" ", ylab=" ")
box()
plot(faithful)
plot(faithful, axes=FALSE, las=2)
plot(faithful, las=2)
plot(faithful, axes=FALSE, xlab="", ylab="")
box()
axis(side=2, las=2)
axis(size=1)
axis(size=1, las=1)
axis(side=1, las=1)
axis(side=1, las=2)
plot(faithful, axes=FALSE, xlab="", ylab="")
box()
axes(side=2, las=2)
axis(side=2, las=2)
axis(side=1, at=1:5)
clear
clear()
clr()
help
clear
clc
library(ggplot2)
region <- names(WorldPhones51)
region <- names(WorldPhones)
region
WorldPhonse
WorldPhones
summary(WorldPhones)
region <- names(WorldPhones)
region
library(lattice)
phones <- data.frame(Year = as.numeric(rep(rownames(WorldPhones), 7)),
Region = rep(colnames(WorldPhones), each = 7),
Telephones = as.numeric(WorldPhones)) xyplot(Telephones  ̃ Year | Region, data = phones)
library(lattice)
phones <- data.frame(Year = as.numeric(rep(rownames(WorldPhones), 7)),
Region = rep(colnames(WorldPhones), each = 7),
Telephones = as.numeric(WorldPhones)) xyplot(Telephones ~ Year | Region, data = phones)
var
variables
var()
variable()
n <- 100
result <- 1
for (i in 1:n)
result <- result * 1
result
result <- result * i
result
for (i in 1:n) result <- result * i
result
results <- numeric(1000) x <- 123
for (i in 1:1000) {
x <- (65539*x) %% (2ˆ31)
results[i] <- x / (2ˆ31)
}
results <- numeric(1000)
x<-123
for (i in 1:1000){}
for (i in 1:1000){x<-(65539*x)%%(2^31);results[i]<-x/(2^31)}
plot(1:1000,results)
re <- randu(1000)
library(rgl)
install.packages("rgl")
packages()
library(rgl)
library(rgl)
plot3d(results[1:998], results[2:999], results[3:1000])
help("cat")
system.time {2+3}
system.time (2+3)
x <- 1000
y <- 1000
system.time (z<-x+y)
x<-1000000
y<-1000000
x<-1:1000
y<-1:1000
system.time(z<-x+y)
x<-1:1000000
y<-1:1000000
system.time(z<-x+y)
x<-1:1000000000000
y<-1:1000000000000
system.time(z<-x+y)
x<-1:1000000000
y<-1:1000000000
system.time ({for (i in 1:1000000000) z[i]<-x[i]+y[i]})
system.time ({for (i in 1:1000000) z[i]<-x[i]+y[i]})
system.time ({for (i in 1:10000000) z[i]<-x[i]+y[i]})
system.time ({for (i in 1:100000000) z[i]<-x[i]+y[i]})
help(rprof)
help("Rprof")
x<-randu(100)
x<-rand(100)
help("rand")
help("??rand")
help(??rand)
x<-random(100)
rbinom
x<-rbinom(100)
x<-rbinom(100,1)
x<-rbinom(100,1,1)
x<-rbinom(100,1,.0001)
x<-rbinom(100,100,.0001)
x<-rbinom(100,100,.1)
y<-rbinom(100,100,.1)
plot(x,ky)
plot(x,y)
hist
hist(x)
hist(y)
mean(x)
mean(y)
x<-rbinom(10000,1000,.1)
y<-rbinom(10000,1000,.1)
plot(x,y)
y<-rbinom(10000,1000,1)
y<-rbinom(10000,1000,.9)
plot(x,y)
y<-pbinom(10000,1000,.9)
plot(x,y)
y<-bbinom(10000,1000,.9)
y<-rbinom(10000,1000,.9)
y<-rbinom(10000,10000,.9)
plot(x,y)
y<-rbinom(10000,10000,.05)
plot(x,y)
y<-rbinom(1000,1000,.2)
plot(x,y)
x<-rbinom(1000,1000,.2)
plot(x,y)
hist(x)
hist(y)
dia
diamonds
library(diamonds)
library(ggplot2)
diamonds
dia <- filter(diamonds, cut = "Premium")
dia <- filter(diamonds, cut == "Premium")
dia <- filter(diamonds, cut == "Very Good")
dia <- filter(diamonds, cut == 'Very Good')
dia <- filter(diamonds, carat > .3)
diamonds
dia <- diamonds %>% filter(cut == "Good")
library(tidyverse)
dia <- filter(diamonds, cut == 'Very Good')
dia
dia <- filter(diamonds, carat > .4)
dia
dia <- filter(diamonds, carat > .8)
dia
dia <- filter(diamonds, carat > 1.2)
dia
di <- filtere(dia, cut == "Premium")
di <- filter(dia, cut == "Premium")
di
pairs(di)
install.packages('IRkernel')
IRkernel::installspec()
package("rmarkdown")
library("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(bookdown)
render_book("Problem Set 1.Rmd")
pwd
pwd()
getwd
getwd()
setwd("~/Desktop/Storage/Cornell/Sophomore Fall 2019/ENGRD 2700/ENGRD 2700 Work/Problem Sets/Problem Set 1")
render_book("Problem Set 1.Rmd")
render_book("Problem_Set_1.Rmd")
render_book("Problem_Set_1.Rmd")
render_book("Problem_Set_1.Rmd")
knit_with_parameters('~/Desktop/Storage/Cornell/Sophomore Fall 2019/ENGRD 2700/ENGRD 2700 Work/Problem Sets/Problem Set 1/Problem-Set-1.Rmd')
setwd("~/Desktop/Storage/Cornell/Sophomore Fall 2019/ENGRD 2700/ENGRD 2700 Work/Recitations/Recitation 1")
marathon <- read.csv("marathon.csv")
marathon
View(marathon)
summary(marathon)
head(marathon)
head(marathon), head(marathon,10)
head(marathon,10)
tail(marathon)
attributes(marathon)
marathon <- as.tibble(marathon)
library('tidyverse')
marathon <- as.tibble(marathon)
marathon <- as_tibble(marathon)
marathon
attributes(marathon)
marathon$Year
marathon["Year"]
marathon[,2]
marathon$Year[1]
plot(marathon$Year,marathon$Time)
ggplot(data = marathon, mapping = aes(x = Time, y = Year)) + geom_point()
ggplot(data = marathon, mapping = aes(x = Year, y = Time)) + geom_point()
ggplot(data = marathon, mapping = aes(x = Year, y = Time)) + geom_point() + geom_smooth()
ggplot(data = marathon, mapping = aes(x = Year, y = Time)) + geom_point() + geom_smooth(mapping = aes(alpha = .2))
ggplot(data = marathon, mapping = aes(x = Year, y = Time)) + geom_point() + geom_smooth(alpha = .2)
ts.plot(y)
ts.plot(marathon$Time)
sleep
sleep <- as_tibble(sleep)
sleep
boxplot(sleep$extra)
group1 <- sleep %>% filter(group == 1)
group1
group2 <- sleep %>% filter(group == 2)
ggplot(data = sleep) + geom_boxplot(mapping = aes(x = group, y = extra))
boxplot(group1$extra, group2$extra)
setwd("~/Desktop/Storage/Cornell/Sophomore Fall 2019/ENGRD 2700/ENGRD 2700 Work/Problem Sets/Problem Set 1")
quartet <- read.csv("quartet.csv")
quartet <- read.csv("Data/quartet.csv")
quartet
plot(quartet$x1, quartet$y1)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(2,2))
plot(quartet$x1, quartet$y1)
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1))
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1))
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2))
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1)) + geom_point(mapping = aes(x = x2, y = y2))
countyData <- read.csv("Data/CountyData.csv")
countyData <- read.csv("Data/CountyData.csv")
countyData <- as_tibble(countyData)
ggplot(data = countyData) + geom_histogram(mapping = aes(y = foreign_language_spoken_home))
ggplot(data = countyData) + geom_histogram(mapping = aes(y = foreign_spoken_at_home))
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home))
view(countyData)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home)) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home)) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 10) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 10) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 20) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 1) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
hist(countyData$foreign_spoken_at_home)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1))
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3))
ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4))
par(mfrow=c(2,2))
plot(quartet$x1, quartet$y1)
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty))
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 100) + ylim(0, 100)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 100) + ylim(0, 100) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 75) + ylim(0, 75) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 76) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 77) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 78) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 80) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 100) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 90) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 76) + ylim(0, 80) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 75) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 100) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 60) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 75) + coord_fixed()
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed()
