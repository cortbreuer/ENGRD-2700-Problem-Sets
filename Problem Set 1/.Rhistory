y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d, "latex", booktabs = T)
x1 <- summary(quartet$x1)
x2 <- summary(quartet$x2)
x3 <- summary(quartet$x3)
x4 <- summary(quartet$x4)
y1 <- summary(quartet$y1)
y2 <- summary(quartet$y2)
y3 <- summary(quartet$y3)
y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d, "latex")
x1 <- summary(quartet$x1)
x2 <- summary(quartet$x2)
x3 <- summary(quartet$x3)
x4 <- summary(quartet$x4)
y1 <- summary(quartet$y1)
y2 <- summary(quartet$y2)
y3 <- summary(quartet$y3)
y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
quartet <- read.csv("Data/Quartet.csv")
x1 <- summary(quartet$x1)
x2 <- summary(quartet$x2)
x3 <- summary(quartet$x3)
x4 <- summary(quartet$x4)
y1 <- summary(quartet$y1)
y2 <- summary(quartet$y2)
y3 <- summary(quartet$y3)
y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d)
par(mfrow=c(2,2))
plot(quartet$x1, quartet$y1)
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
countyData <- read.csv("Data/CountyData.csv")
countyData <- as_tibble(countyData)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
median(countyData$fed_spending, na.rm = TRUE)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors")
par(pty = "s")
plot(countyData$bachelors, countyData$poverty, xlim = c(0, 80), ylim = c(0, 80), main = "Poverty vs. Bachelors", xlab = "Percent of County with Bachelors Degrees", ylab = "Percent of County Below Poverty Line")
x1 <- summary(quartet$x1)
x2 <- summary(quartet$x2)
x3 <- summary(quartet$x3)
x4 <- summary(quartet$x4)
y1 <- summary(quartet$y1)
y2 <- summary(quartet$y2)
y3 <- summary(quartet$y3)
y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d, "latex")
kable(d, "latex")
x1 <- summary(quartet$x1)
x2 <- summary(quartet$x2)
x3 <- summary(quartet$x3)
x4 <- summary(quartet$x4)
y1 <- summary(quartet$y1)
y2 <- summary(quartet$y2)
y3 <- summary(quartet$y3)
y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
X1 <- summary(quartet$x1)
X2 <- summary(quartet$x2)
X3 <- summary(quartet$x3)
X4 <- summary(quartet$x4)
Y1 <- summary(quartet$y1)
Y2 <- summary(quartet$y2)
Y3 <- summary(quartet$y3)
Y4 <- summary(quartet$y4)
d <- tibble(x1, x2, x3, x4, y1, y2, y3, y4)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
X1 <- summary(quartet$x1)
X2 <- summary(quartet$x2)
X3 <- summary(quartet$x3)
X4 <- summary(quartet$x4)
Y1 <- summary(quartet$y1)
Y2 <- summary(quartet$y2)
Y3 <- summary(quartet$y3)
Y4 <- summary(quartet$y4)
d <- tibble(X1, X2, X3, X4, Y1, Y2, Y3, Y4)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
summary(X4)
summary(quartet$x1)
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
X1 <- summary(quartet$x1)
X2 <- summary(quartet$x2)
X3 <- summary(quartet$x3)
X4 <- summary(quartet$x4)
Y1 <- summary(quartet$y1)
Y2 <- summary(quartet$y2)
Y3 <- summary(quartet$y3)
Y4 <- summary(quartet$y4)
d <- tibble(statNames, X1, X2, X3, X4, Y1, Y2, Y3, Y4)
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
X1 <- summary(quartet$x1)
X2 <- summary(quartet$x2)
X3 <- summary(quartet$x3)
X4 <- summary(quartet$x4)
Y1 <- summary(quartet$y1)
Y2 <- summary(quartet$y2)
Y3 <- summary(quartet$y3)
Y4 <- summary(quartet$y4)
d <- tibble(statNames, X1[1:3])
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
X1[1] <- mean(quartet$x1)
X2 <- summary(quartet$x2)
X3 <- summary(quartet$x3)
X4 <- summary(quartet$x4)
Y1 <- summary(quartet$y1)
Y2 <- summary(quartet$y2)
Y3 <- summary(quartet$y3)
Y4 <- summary(quartet$y4)
d <- tibble(statNames, X1[1:3])
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
X1[1] <- mean(quartet$x1)
X1[2] <- median(quartet$x1)
X1[3] <- sd(quartet$x1)
d <- tibble(statNames, X1[1:3])
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
quartet$x1
sum(quartet$x1)
sort(quartet$x1)
sd(quartet$x1)
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
colNames <- c("x1", "x2", "x3", "x4")
X1[1] <- mean(quartet$x1)
X1[2] <- median(quartet$x1)
X1[3] <- sd(quartet$x1)
d <- tibble(statNames, X1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
quartet <- read.csv("Data/Quartet.csv")
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
colNames <- c("x1", "x2", "x3", "x4")
X1[1] <- mean(quartet$x1)
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
colNames <- c("x1", "x2", "x3", "x4")
X1 <- mean(quartet$x1)
X1 <- median(quartet$x1)
X1 <- sd(quartet$x1)
d <- tibble(statNames, X1)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
sd(quartet$x1)
sqrt(3.32)
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
m <- apply(quartet, 2, mean)
X1 <- mean(quartet$x1)
X1 <- median(quartet$x1)
X1 <- sd(quartet$x1)
d <- tibble(statNames, X1)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
m
mean(quartet["x1"]
)
mean(quartet[x1])
mean(quartet['x1'])
mean(quartet$x1)
mean(quartet$x2)
mean(quartet$y2)
mean(quartet$y3)
mean(quartet$y4)
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
X1 <- mean(quartet$x1)
X1 <- median(quartet$x1)
X1 <- sd(quartet$x1)
d <- tibble(statNames, X1)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
quartetSD
quartetMedian
statNames <- c("Sample Mean", "Sample Median", "Sample Standard Deviation")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
d <- tibble(quartetMean, quartetMedian, quartetSD)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
statNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4",)
statNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
d <- tibble(quartetMean, quartetMedian, quartetSD)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
d <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
"Mean"<- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
d <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
"Mean"
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
"Mean"<- apply(quartet, 2, mean)
"Median"<- apply(quartet, 2, median)
"Standard Deviation" <- apply(quartet, 2, sd)
d <- tibble(colNames, "Mean", "Median", "Standard Deviation")
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
colnames(d)
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
d <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
colnames(d)
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
summaryTable <- summaryTable %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMean, "Sample Standard Deviation" = quartetSD)
kable(d) %>% kable_styling(bootstrap_options = c("striped", "hover"))
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
summaryTable <- summaryTable %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMean, "Sample Standard Deviation" = quartetSD)
kable(summaryTable) %>% kable_styling(bootstrap_options = c("striped", "hover"))
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
summaryTable <- summaryTable %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMedian, "Sample Standard Deviation" = quartetSD)
kable(summaryTable) %>% kable_styling(bootstrap_options = c("striped", "hover"))
setwd("~/Desktop/Storage/Cornell/Sophomore Fall 2019/ENGRD 2700/ENGRD 2700 Work/Problem Sets/Problem Set 1")
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
quartet <- read.csv("Data/Quartet.csv")
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD)
summaryTable <- summaryTable %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMedian, "Sample Standard Deviation" = quartetSD)
kable(summaryTable) %>% kable_styling(bootstrap_options = c("striped", "hover"))
par(mfrow=c(2,2))
plot(quartet$x1, quartet$y1)
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
countyData <- read.csv("Data/CountyData.csv")
countyData <- as_tibble(countyData)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties")
median(countyData$fed_spending, na.rm = TRUE)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors")
par(pty = "s")
plot(countyData$bachelors, countyData$poverty, xlim = c(0, 80), ylim = c(0, 80), main = "Poverty vs. Bachelors", xlab = "Percent of County with Bachelors Degrees", ylab = "Percent of County Below Poverty Line")
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") + panel.border = element_rect(colour = "black", fill=NA, size=1)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") + (panel.border = element_rect(colour = "black", fill=NA, size=1)
par(pty = "s")
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") + theme(panel.border = element_rect(colour = "black", fill=NA, size=1)
par(pty = "s")
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors")
par(pty = "s")
plot(countyData$bachelors, countyData$poverty, xlim = c(0, 80), ylim = c(0, 80), main = "Poverty vs. Bachelors", xlab = "Percent of County with Bachelors Degrees", ylab = "Percent of County Below Poverty Line")
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") +  + theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") + theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
par(pty = "s")
plot(countyData$bachelors, countyData$poverty, xlim = c(0, 80), ylim = c(0, 80), main = "Poverty vs. Bachelors", xlab = "Percent of County with Bachelors Degrees", ylab = "Percent of County Below Poverty Line")
theme_set(theme_bw())
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") + theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
par(pty = "s")
plot(countyData$bachelors, countyData$poverty, xlim = c(0, 80), ylim = c(0, 80), main = "Poverty vs. Bachelors", xlab = "Percent of County with Bachelors Degrees", ylab = "Percent of County Below Poverty Line")
quartetSD
round(quartetSD, digits = 2)
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD) %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMedian, "Sample Standard Deviation" = quartetSD) %>% round(digits = 0)
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD) %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMedian, "Sample Standard Deviation" = quartetSD) %>% mutate_if(is.numeric, round, digits = 2)
kable(summaryTable) %>% kable_styling(bootstrap_options = c("striped", "hover"))
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1))
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1), size = 3)
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
max(quartet)
min(quartet)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1), size = 3) + xlim(0, 20) + ylim(0, 20)
plot(quartet$x2, quartet$y2)
plot(quartet$x3, quartet$y3)
plot(quartet$x4, quartet$y4)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1), size = 3) + xlim(0, 20) + ylim(0, 20)
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2), size = 3) + xlim(0, 20) + ylim(0, 20)
ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3), size = 3) + xlim(0, 20) + ylim(0, 20)
ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4), size = 3) + xlim(0, 20) + ylim(0, 20)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1), size = 3) + xlim(0, 20) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2), size = 3) + xlim(0, 20) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3), size = 3) + xlim(0, 20) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4), size = 3) + xlim(0, 20) + ylim(0, 15)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1), size = 3) + xlim(0, 18) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2), size = 3) + xlim(0, 18) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3), size = 3) + xlim(0, 18) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4), size = 3) + xlim(0, 18) + ylim(0, 15)
par(mfrow=c(2,2))
ggplot(data = quartet) + geom_point(mapping = aes(x = x1, y = y1), size = 3) + xlim(0, 18) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2), size = 3) + xlim(0, 18) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3), size = 3) + xlim(0, 18) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4), size = 3) + xlim(0, 19) + ylim(0, 15)
par(mfrow=c(2,2))
ggplot(data = quartet, aes(x = x1, y = y1)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2), size = 3) + xlim(0, 19) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3), size = 3) + xlim(0, 19) + ylim(0, 15)
ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4), size = 3) + xlim(0, 19) + ylim(0, 15)
grid.arrange()
install.packages("gridExra")
install.packages("gridEtxra")
install.packages("gridExtra")
library(gridExtra)
grid.arrange()
grid.arrange()
p1 <- ggplot(data = quartet, aes(x = x1, y = y1)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p2 <- ggplot(data = quartet) + geom_point(mapping = aes(x = x2, y = y2), size = 3) + xlim(0, 19) + ylim(0, 15)
p3 <- ggplot(data = quartet) + geom_point(mapping = aes(x = x3, y = y3), size = 3) + xlim(0, 19) + ylim(0, 15)
p4 <- ggplot(data = quartet) + geom_point(mapping = aes(x = x4, y = y4), size = 3) + xlim(0, 19) + ylim(0, 15)
grid.arrange(p1, p2, p3, p4)
p1 <- ggplot(data = quartet, aes(x = x1, y = y1)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p2 <- ggplot(data = quartet, aes(x = x2, y = y2)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p3 <- ggplot(data = quartet, aes(x = x3, y = y3)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p4 <- ggplot(data = quartet, aes(x = x4, y = y4)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
grid.arrange(p1, p2, p3, p4)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors")
par(pty = "s")
plot(countyData$bachelors, countyData$poverty, xlim = c(0, 80), ylim = c(0, 80), main = "Poverty vs. Bachelors", xlab = "Percent of County with Bachelors Degrees", ylab = "Percent of County Below Poverty Line")
countyData
countyData %>% filter(age_under_18 > 30)
over30 <- countyData %>% filter(age_under_18 > 30)
length(over30)
length(countyData)
over30 <- countyData %>% filter(age_under_18 > 30)
length(over30)
nrow(countyData)
over30 <- countyData %>% filter(age_under_18 > 30)
nrow(over30)
over30 <- countyData %>% filter(age_under_18 > 30)
nrow(over30)
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- over30 / nrow(countyData)
percOver30
114/3111
print
print(he)
print("he")
print("hey" percOver30 "hey")
print("hey", percOver30, "hey")
print(sprintf("Hey %s", percOver30))
print(sprintf("Hey %s.2", percOver30))
print(sprintf("Hey %#.2s", percOver30))
print(sprintf("Hey %#.3s", percOver30))
print(sprintf("Hey %#2.3s", percOver30))
print(sprintf("Hey %#.5s", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("Hey %#.5s", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("Hey %#.5s%", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("Hey %#.5s\%", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("Hey %#.5s%%", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("Hey %#.4s%%", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("Hey %#.4s %%", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
print(sprintf("%#.4s%% of counties have a population with over 30%% aged 18.", percOver30))
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty vs. Bachelors") + ylab("Percent of County Below Poverty Line") + xlab("Percent of County with Bachelors Degrees")
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty Rate vs. Bachelors Degrees Per County") + ylab("Percent of County Below Poverty Line") + xlab("Percent of County with Bachelors Degrees")
fedSpendingMedian <- median(countyData$fed_spending, na.rm = TRUE)
fedSpendingMedian
fedSpendingMedian <- median(countyData$fed_spending, na.rm = TRUE)
quartet
summary(quartet$x1)
summary(quartet$x2)
summary(quartet$x3)
summary(quartet$x4)
sd(quartet$x1)
sd(quartet$x2)
sd(quartet$x3
)
sd(quartet$x4)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(gridExtra)
theme_set(theme_bw())
quartet <- read.csv("Data/Quartet.csv")
colNames <- c("X1", "X2", "X3", "X4", "Y1", "Y2", "Y3", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD) %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMedian, "Sample Standard Deviation" = quartetSD) %>% mutate_if(is.numeric, round, digits = 2)
kable(summaryTable) %>% kable_styling(bootstrap_options = c("striped", "hover"))
p1 <- ggplot(data = quartet, aes(x = x1, y = y1)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p2 <- ggplot(data = quartet, aes(x = x2, y = y2)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p3 <- ggplot(data = quartet, aes(x = x3, y = y3)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
p4 <- ggplot(data = quartet, aes(x = x4, y = y4)) + geom_point(size = 3) + xlim(0, 19) + ylim(0, 15)
grid.arrange(p1, p2, p3, p4)
countyData <- read.csv("Data/CountyData.csv")
countyData <- as_tibble(countyData)
ggplot(data = countyData) + geom_histogram(mapping = aes(foreign_spoken_at_home), binwidth = 5) + labs(x = "Percent of Residents Who Speak a Foreign Language at Home", y = "Number of Counties") + theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
fedSpendingMedian <- median(countyData$fed_spending, na.rm = TRUE)
ggplot(data = countyData) + geom_point(mapping = aes(x = bachelors, y = poverty)) + xlim(0, 80) + ylim(0, 80) + coord_fixed() + ggtitle("Poverty Rate vs. Bachelors Degrees Per County") + ylab("Percent of County Below Poverty Line") + xlab("Percent of County with Bachelors Degrees")
over30 <- countyData %>% filter(age_under_18 > 30)
over30 <- nrow(over30)
percOver30 <- 100  * (over30 / nrow(countyData))
sd(quartet$x1)
sd(quartet$x2)
sd(quartet$x3)
sd(quartet$x4)
sd(quartet$y1)
sd(quartet$y2)
sd(quartet$y3)
sd(quartet$y4)
colNames <- c("X1", "Y1", "X2", "Y2", "X3", "Y3", "X4", "Y4")
quartetMean <- apply(quartet, 2, mean)
quartetMedian <- apply(quartet, 2, median)
quartetSD <- apply(quartet, 2, sd)
summaryTable <- tibble(colNames, quartetMean, quartetMedian, quartetSD) %>% rename(Column = colNames, "Sample Mean" = quartetMean, "Sample Median" = quartetMedian, "Sample Standard Deviation" = quartetSD) %>% mutate_if(is.numeric, round, digits = 2)
kable(summaryTable) %>% kable_styling(bootstrap_options = c("striped", "hover"))
mean(quartet$x1)
mean(quartet$x2)
mean(quartet$x3)
mean(quartet$x4)
mean(quartet$y1)
mean(quartet$y2)
mean(quartet$y3)
mean(quartet$y4)
median(quartet$x1)
median(quartet$x2)
median(quartet$x3)
median(quartet$x4)
median(quartet$y1)
median(quartet$y2)
median(quartet$y3)
median(quartet$y4)
24*5000000
(24*5000000)+700000
((24*5000000)+700000)/25
((24*500000)+700000)/25
a+b / b + c
a^2+2ab+b^2)+(b^2+2bc+c^2)
c <- c(1, 2, 3, 4, 5)
mean(c)
c <- c + 2
mean(c)
c <- c*3
mean(c)
c <- c(1, 2, 3, 4, 5)
mean(c)
c <- c*3
mean(c)
c <- c+2
mean(c)
